{"version":3,"sources":["package.json","libs/types.js","libs/object.js","libs/array.js","libs/function.js","libs/url.js","libs/number.js","libs/string.js","libs/date.js","libs/other.js","libs/validator.js","libs/base64.js","libs/files.js","libs/prototype.js","index.js"],"names":["module","exports","name","version","description","main","scripts","test","start","build","repository","type","url","keywords","author","license","isNull","value","Object","prototype","toString","call","isUndefined","isBoolean","isNumber","isString","isSymbol","isObject","isRegExp","isArray","isFunction","getType","match","toLocaleLowerCase","deepClone","obj","Array","map","row","ret","keys","forEach","key","Date","getTime","orderBy","arr","props","orders","sort","a","b","reduce","acc","prop","i","p1","p2","findPathByLeafId","leafIdName","leafId","nodes","path","length","tmpPath","push","children","findResult","merge","hasOwnProperty","uniqueBy","filter","element","index","array","findIndex","unique","indexOf","maxNumBy","find","item","Math","max","apply","minNumBy","min","maxNum","minNum","debounceStart","fn","delay","timer","status","clearTimeout","arguments","setTimeout","debounceEnd","args","debounce","immediate","throttle","insertUrl","options","replace","$0","$1","val","encodeURIComponent","undefined","Error","URLSearchParams","param","JSON","stringify","join","maps","_params","res","decodeURIComponent","split","parse","err","Url","urlString","exec","href","origin","protocol","host","hostname","port","pathname","search","hash","console","error","randomNum","floor","random","round","n","decimals","Number","sum","sumBy","toDecimalMark","num","mark","_num","toLocaleString","padStart","mask","cc","num1","num2","_mask","reg","RegExp","$2","$3","maskLeft","maskRight","strL","randomHexColorCode","getCounts","str","arrStr","_key","uuid","len","radix","chars","r","guid","c","v","formatTime","format","date","o","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","dayNames","getDay","k","getFullYear","substr","_year","formatHMS","s","getRate","rate","slice","graceChecker","check","data","rule","checkType","errorMsg","checkRule","minMax","some","checkVal","toStream","base64","decode","log","_keyStr","encode","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","_utf8_encode","charCodeAt","isNaN","charAt","String","fromCharCode","_utf8_decode","string","utftext","c2","c3","downFiles","match_all","utilscore","types","other","validator","files","packageJSON","global"],"mappings":";AAAAA,OAAOC,QAAQ,CAACC,KAAK,YAAYC,QAAQ,SAASC,YAAY,mBAAmBC,KAAK,WAAWC,QAAQ,CAACC,KAAK,4CAA4CC,MAAM,kBAAkBC,MAAM,yBAAyBC,WAAW,CAACC,KAAK,MAAMC,IAAI,sCAAsCC,SAAS,CAAC,YAAY,OAAO,SAAS,WAAW,YAAY,OAAO,QAAQ,MAAM,OAAO,cAAcC,OAAO,MAAMC,QAAQ;;AC6DxY,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,QAAA,WAAA,QAAA,QAAA,QAAA,SAAA,QAAA,SAAA,QAAA,SAAA,QAAA,SAAA,QAAA,SAAA,QAAA,UAAA,QAAA,YAAA,QAAA,YAAA,EAxDA,IAAMC,EAAS,SAAAC,GAASC,MAAyC,iBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAwDvD,QAAA,OAAA,EAlDA,IAAMK,EAAc,SAAAL,GAASC,MAAyC,sBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAkD5D,QAAA,YAAA,EA5CA,IAAMM,EAAY,SAAAN,GAASC,MAAyC,oBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IA4C1D,QAAA,UAAA,EAtCA,IAAMO,EAAW,SAAAP,GAASC,MAAyC,mBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAsCzD,QAAA,SAAA,EAhCA,IAAMQ,EAAW,SAAAR,GAASC,MAAyC,mBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAgCzD,QAAA,SAAA,EA1BA,IAAMS,EAAW,SAAAT,GAASC,MAAyC,mBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IA0BzD,QAAA,SAAA,EApBA,IAAMU,EAAW,SAAAV,GAASC,MAAyC,mBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAoBzD,QAAA,SAAA,EAdA,IAAMW,EAAW,SAAAX,GAAQC,MAAyC,mBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAcxD,QAAA,SAAA,EARA,IAAMY,EAAU,SAAAZ,GAASC,MAAyC,kBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAQxD,QAAA,QAAA,EAFA,IAAMa,EAAa,SAAAb,GAASC,MAAyC,qBAAzCA,OAAOC,UAAUC,SAASC,KAAKJ,IAE3D,QAAA,WAAA,EAAA,IAAMc,EAAU,SAACd,GAAUC,OAAAA,OAAOC,UAAUC,SAASC,KAAKJ,GAAOe,MAAM,eAAe,GAAGC,qBAAzF,QAAA,QAAA;;AC6DA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,MAAA,QAAA,iBAAA,QAAA,QAAA,QAAA,eAAA,EA1HP,IAAA,EAAA,QAAA,WA0HO,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,mDAAA,SAAA,EAAA,GAAA,GAAA,OAAA,YAAA,OAAA,IAAA,uBAAA,OAAA,UAAA,SAAA,KAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,CAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,QAAA,EAAA,EAAA,OAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GApHA,IAAMC,EAAY,SAAZA,EAAaC,GACnB,GAAA,OAASA,EACDA,OAAAA,EAERA,GAAAA,aAAeC,MACPD,OAAAA,EAAIE,IAAI,SAAAC,GAAOJ,OAAAA,EAAUI,KAEjCH,GAAAA,aAAejB,OAAO,CACjBqB,IAAAA,EAAM,GAQHA,OAPPrB,OAAOsB,KAAKL,GAAKM,QAAQ,SAAAC,GAClBP,EAAIO,aAAgBC,KACnBJ,EAAIG,GAAO,IAAIC,KAAKR,EAAIO,GAAKE,WAE7BL,EAAIG,GAAOR,EAAUC,EAAIO,MAG1BH,EAEJJ,OAAAA,GAkGJ,QAAA,UAAA,EAlFA,IAAMU,EAAU,SAACC,EAAKC,EAAOC,GACzB,OAAA,EAAIF,GAAKG,KAAK,SAACC,EAAGC,GACzBJ,OAAAA,EAAMK,OAAO,SAACC,EAAKC,EAAMC,GACnBF,GAAQ,IAARA,EAAW,CACIL,IADJ,EAAA,EACIA,GAAwB,SAAdA,EAAOO,GAAgB,CAACJ,EAAEG,GAAOJ,EAAEI,IAAS,CAACJ,EAAEI,GAAOH,EAAEG,IADtE,GACNE,EADM,EAAA,GACFC,EADE,EAAA,GAEbJ,EAAMG,EAAKC,EAAK,EAAID,EAAKC,GAAM,EAAI,EAE9BJ,OAAAA,GACN,MA0EA,QAAA,QAAA,EAzCA,IAAMK,EAAmB,SAAnBA,EAAoBC,EAAWC,EAAQC,GAC5C,IADmDC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACtDP,EAAI,EAAGA,EAAIM,EAAME,OAAQR,IAAK,CAAA,IAAA,EAC9BS,EAAcF,EAAAA,GACfF,GAAAA,GAAUC,EAAMN,GAAGI,GACXK,OAAAA,EAORH,GAJHG,EAAQC,MACHN,EAAAA,EAAAA,GAAAA,EAAYE,EAAMN,GAAGI,IAChBE,EAAAA,EAAAA,QAAAA,EAAMN,GAAGrD,MAFnB,IAIG2D,EAAMN,GAAGW,SAAU,CACdC,IAAAA,EAAaT,EAAiBC,EAAWC,EAAQC,EAAMN,GAAGW,SAAUF,GACrEG,GAAAA,EACQA,OAAAA,KA2BhB,QAAA,iBAAA,EAAA,IAAMC,EAAQ,SAARA,EAASlB,EAAEC,GACf,IAAA,IAAIT,KAAOS,EACPD,EAAEmB,eAAe3B,IAEX,EAASS,EAAAA,UAAAA,EAAET,MAAU,EAASQ,EAAAA,UAAAA,EAAER,KACvC0B,EAAMlB,EAAER,GAAMS,EAAET,IAFhBQ,EAAER,GAAOS,EAAET,GAKZQ,OAAAA,GARJ,QAAA,MAAA;;ACxEA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,OAAA,QAAA,SAAA,QAAA,SAAA,QAAA,OAAA,QAAA,cAAA,EA5CA,IAAMoB,EAAW,SAASxB,EAAIJ,GAC1BI,OAAAA,EAAIyB,OAAO,SAACC,EAAQC,EAAMC,GAAQA,OAAAA,EAAMC,UAAU,SAAArC,GAAKA,OAAAA,EAAII,KAAO8B,EAAQ9B,OAAU+B,KA2CxF,QAAA,SAAA,EAlCA,IAAMG,EAAS,SAAC9B,GACnBA,OAAAA,EAAIyB,OAAO,SAACC,EAAQC,EAAMC,GAAQA,OAAAA,EAAMG,QAAQL,KAAaC,KAiC1D,QAAA,OAAA,EAzBA,IAAMK,EAAW,SAAChC,EAAIJ,GACzBI,OAAAA,EAAIiC,KAAK,SAAAC,GAAQA,OAAAA,EAAKtC,KAAOuC,KAAKC,IAAIC,MAAMF,KAAKnC,EAAIT,IAAI,SAAAC,GAAKA,OAAAA,EAAII,SAwB/D,QAAA,SAAA,EAhBA,IAAM0C,EAAW,SAACtC,EAAIJ,GACzBI,OAAAA,EAAIiC,KAAK,SAAAC,GAAQA,OAAAA,EAAKtC,KAAOuC,KAAKI,IAAIF,MAAMF,KAAKnC,EAAIT,IAAI,SAAAC,GAAKA,OAAAA,EAAII,SAe/D,QAAA,SAAA,EARA,IAAM4C,EAAS,SAACxC,GACnBmC,OAAAA,KAAKC,IAAIC,MAAMF,KAAKnC,IAOjB,QAAA,OAAA,EAAA,IAAMyC,EAAS,SAACzC,GACnBmC,OAAAA,KAAKI,IAAIF,MAAMF,KAAKnC,IADjB,QAAA,OAAA;;ACcA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,SAAA,QAAA,YAAA,QAAA,mBAAA,EA3DA,IAAO0C,EAAgB,SAAUC,GAAGC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAC5CC,EAAQ,KACRC,GAAS,EACbC,aAAaF,GACVC,IACFA,GAAS,EACTH,EAAGpE,KAAK,KAAKyE,YAEdH,EAAQI,WAAW,WAAIH,OAAAA,GAAS,GAAMF,IAmDhC,QAAA,cAAA,EA1CA,IAAMM,EAAc,SAACP,EAAGC,GAC1BC,IAAAA,EAAQ,KACL,OAAA,WAAW,IAAA,EAAA,KACbM,EAAOH,UACRH,GAAOE,aAAaF,GACvBA,EAAQI,WAAW,WAClBN,EAAGN,MAAM,EAAKc,IACbP,KAmCG,QAAA,YAAA,EAxBA,IAAMQ,EAAW,SAACT,EAAGC,GAAMS,IAAAA,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GACzCR,EAAQ,KACRC,GAAS,EACV,OAACO,EAKQ,WACXN,aAAaF,GACVC,IACFA,GAAS,EACTH,EAAGpE,KAAK,KAAKyE,YAEdH,EAAQI,WAAW,WAAIH,OAAAA,GAAS,GAAMF,IAXjB,WAAW,IAAA,EAAA,KAC5BO,EAAOH,UACRH,GAAOE,aAAaF,GACvBA,EAAQI,WAAW,WAAIN,OAAAA,EAAGN,MAAM,EAAKc,IAAMP,KAkBtC,QAAA,SAAA,EAAA,IAAMU,EAAW,SAACX,EAAGC,GACvBC,IAAAA,EAAQ,KACF,OAAA,WAAW,IAAA,EAAA,KACVM,EAAOH,UACNH,IACDA,EAAQI,WAAW,WACfJ,EAAQ,KACRF,EAAGN,MAAM,EAAMc,IAChBP,MARR,QAAA,SAAA;;ACuBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,QAAA,gBAAA,QAAA,eAAA,EAvFP,IAAA,EAAA,QAAA,WAuFO,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAhFA,IAAMW,EAAY,SAACzF,GAAK0F,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAC9B1F,OAAAA,EAAI2F,QAAQ,uBAAwB,SAACC,EAAIC,GACxCC,IAAAA,EAAMC,mBAAmBL,EAAQG,IAI9BC,YAHKE,IAARF,GACIG,IAAAA,MAAajG,OAAAA,OAAAA,EAAgB6F,cAAAA,OAAAA,IAE9BC,KA0ER,QAAA,UAAA,EA3CA,IAAMI,EAAkB,SAACC,GACxB,IAAA,EAASA,EAAAA,UAAAA,GACF7F,OAAAA,OAAOsB,KAAKuE,GAAO1E,IAAI,SAAAK,GAAUA,MAAAA,GAAAA,OAAAA,EAAOiE,KAAAA,OAAAA,mBAAmBK,KAAKC,UAAUF,EAAMrE,QAAUwE,KAAK,KACnG,IAAI,EAASH,EAAAA,UAAAA,GAAQ,CACpBI,IAAAA,EAAO,GACPC,EAAUL,EAAM/E,MAAM,6EAenBmF,OAdPC,GAAWA,EAAQ3E,QAAQ,SAAA4E,GACnB/E,IAAAA,EAAMgF,mBAAmBD,GAAKE,MAAM,KACpC,IACAJ,EAAK7E,EAAI,IAAM0E,KAAKQ,MAAMF,mBAAmBhF,EAAI,KACnD,MAAOmF,GACF,IACCN,EAAK7E,EAAI,IAAMgF,mBAAmBhF,EAAI,IAGpCmF,MAAAA,GACFN,EAAK7E,EAAI,IAAMA,EAAI,OAIxB6E,IAuBR,QAAA,gBAAA,EAAA,IAAMO,EAAM,SAACC,GACZ,IAC4F,IAD5F,EAAA,EAC4F,4EAA4EC,KAAKD,GAD7K,IACKE,EADL,EAAA,GACWC,EADX,EAAA,GACmBC,EADnB,EAAA,GAC4BC,EAD5B,EAAA,GACiCC,EADjC,EAAA,GACmDC,GADnD,EAAA,GAAA,EAAA,IACwDC,EADxD,EAAA,GAC4EC,GAD5E,EAAA,GAAA,EAAA,IAEO,MAAA,CAACC,KAFR,EAAA,IAEaL,KAAAA,EAAKC,SAAAA,EAASJ,KAAAA,EAAKC,OAAAA,EAAOK,SAAAA,EAASD,KAAAA,EAAKH,SAAAA,EAASK,OAAAA,GAChE,MAAOX,GACLa,QAAQC,MAAyDZ,mDAAAA,OAAAA,EAAjE,qBALD,QAAA,IAAA;;ACjDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,QAAA,MAAA,QAAA,IAAA,QAAA,MAAA,QAAA,eAAA,EAjCA,IAAMa,EAAY,SAACnD,EAAKH,GAAQD,OAAAA,KAAKwD,MAAMxD,KAAKyD,UAAYxD,EAAMG,EAAM,IAAMA,GAiC9E,QAAA,UAAA,EA1BA,IAAMsD,EAAQ,SAACC,GAAGC,IAAAA,EAAW,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACzBC,OAAAA,OAAU7D,GAAAA,OAAAA,KAAK0D,MAASC,GAAAA,OAAAA,EAAKC,KAAAA,OAAAA,IAAgBA,MAAAA,OAAAA,KAyBjD,QAAA,MAAA,EAjBA,IAAME,EAAM,WAAIjG,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAJ,IAAA,MAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAAIA,EAAJ,GAAA,UAAA,GAAY,MAAA,GAAIA,OAAAA,GAAKM,OAAO,SAACC,EAAKqD,GAAQrD,OAAAA,EAAMqD,GAAK,IAiBjE,QAAA,IAAA,EATA,IAAMsC,EAAQ,SAAClG,EAAK2C,GACzB3C,OAAAA,EAAIT,IAAkB,mBAAPoD,EAAoBA,EAAK,SAAAiB,GAAOA,OAAAA,EAAIjB,KAAKrC,OAAO,SAACC,EAAKqD,GAAQrD,OAAAA,EAAMqD,GAAK,IAQnF,QAAA,MAAA,EAAA,IAAMuC,EAAgB,SAACC,GAAIC,IAAAA,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACjCC,EAAOF,EAAIG,eAAe,SAC3BF,OAAAA,EAAaC,EAAKE,SAASF,EAAKrF,OAAO,EAAEoF,GACrCC,GAHF,QAAA,cAAA;;ACgFA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,KAAA,QAAA,UAAA,QAAA,mBAAA,QAAA,UAAA,QAAA,SAAA,QAAA,UAAA,EAtHP,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,WAUaG,EAAO,SAACC,GAAIC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGC,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGC,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAC/CC,EAAM,IAAIC,OAAkBJ,OAAAA,OAAAA,EAAiBC,SAAAA,OAAAA,EAAOD,EAAeC,QAAAA,OAAAA,GAAMF,EAAGzF,OAAO,IAAK,IAA5F,OACOyF,OAAAA,EAAGjD,QAAQqD,EAAI,SAACpD,EAAGC,EAAGqD,EAAGC,GAAMtD,OAAAA,EAAGqD,EAAGvD,QAAQ,KAAKoD,GAAOI,KAyG3D,QAAA,KAAA,EAhGA,IAAMC,EAAW,SAACR,GAAIN,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGS,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAAQJ,OAAAA,EAAKC,EAAG,EAAEN,EAAIS,IAgG7D,QAAA,SAAA,EAxFA,IAAMM,EAAY,SAACT,GAAIN,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAAGS,EAAQ,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IACzCO,EAAOV,EAAGzF,OACPwF,OAAAA,EAAKC,EAAGN,EAAIgB,EAAK,EAAEA,EAAKhB,EAAIgB,EAAKP,IAsFnC,QAAA,UAAA,EA/EA,IAAMQ,EAAqB,WAC1BvB,IAAAA,GAAsB,QAAhB3D,KAAKyD,SAAsB,GAAGtH,SAAS,IAC1C,MAAA,KAAoB,IAAbwH,EAAE7E,QAAiC,GAAhBkB,KAAKyD,SAAkB,GAAGtH,SAAS,IAAMwH,EAAIA,IA6E3E,QAAA,mBAAA,EA7DA,IAAMwB,EAAY,SAACC,GAAI7H,IAAAA,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,KAC7BM,EAAM,GAENwH,EAASD,EAAI9C,MAAM,IAkBjBzE,QAhBH,EAAQN,EAAAA,SAAAA,IAAgB,EAAOA,EAAAA,QAAAA,IAC1B,EAASA,EAAAA,UAAAA,GAAgBA,EAAK+E,MAAM,MAC9B,EAAO+C,EAAAA,QAAAA,IAEdjI,IAAI,SAAAK,GAGLkH,IAAAA,EAAM,IAAIC,OAAO,kEAAoE,KACrFU,EAAO7H,EAAI6D,QAAQqD,EAAI,QAEvBvC,EAAMgD,EAAIrI,MAAM,IAAI6H,OAAOU,EAAK,MAEpCzH,EAAIJ,GAAO2E,EAAKvE,EAAIJ,GAAO2E,EAAItD,OAAQ,IAInCjB,GAwCD,QAAA,UAAA,EAhCA,IAAM0H,EAAO,SAACC,EAAKC,GACpBC,IACWpH,EAQTqH,EATFD,EAAQ,iEAAiEpD,MAAM,IAC/EiD,EAAO,GAGPC,GAFJC,EAAQA,GAASC,EAAM5G,OAEnB0G,EAEGlH,IAAAA,EAAI,EAAGA,EAAIkH,EAAKlH,IAAKiH,EAAKjH,GAAKoH,EAAM,EAAI1F,KAAKyD,SAASgC,QAWvDnH,IALLiH,EAAK,GAAKA,EAAK,IAAMA,EAAK,IAAMA,EAAK,IAAM,IAC3CA,EAAK,IAAM,IAINjH,EAAI,EAAGA,EAAI,GAAIA,IACbiH,EAAKjH,KACRqH,EAAI,EAAkB,GAAd3F,KAAKyD,SACb8B,EAAKjH,GAAKoH,EAAY,IAALpH,EAAgB,EAAJqH,EAAW,EAAMA,IAK7CJ,OAAAA,EAAKtD,KAAK,KAMZ,QAAA,KAAA,EAAA,IAAM2D,EAAO,WACX,MAAA,uCAAuCtE,QAAQ,QAAS,SAASuE,GAChEF,IAAAA,EAAkB,GAAd3F,KAAKyD,SAAY,EAClBqC,OAD8B,KAALD,EAAWF,EAAO,EAAFA,EAAM,GAC7CxJ,SAAS,OAHjB,QAAA,KAAA;;ACjEE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,UAAA,QAAA,gBAAA,EA/CF,IAAM4J,EAAa,SAAC7I,EAAK8I,GACxBA,GAAAA,EAAQ,CACNC,IAAAA,EAQAC,EAAI,CACAD,MAPNA,EADE/I,aAAeQ,KACVR,EAEA,IAAIQ,KAAKR,IAKLiJ,WAAa,EAAI,KAAOF,EAAKE,WAAa,GAAMF,EAAKE,WAAa,EACvEF,KAAAA,EAAKG,UAAY,GAAK,IAAMH,EAAKG,UAAYH,EAAKG,UAClDH,KAAAA,EAAKI,WACLJ,KAAAA,EAAKK,aACLL,KAAAA,EAAKM,aAAe,GAAK,IAAMN,EAAKM,aAAeN,EAAKM,aACxDvG,KAAAA,KAAKwD,OAAOyC,EAAKE,WAAa,GAAK,GACnCF,KAAAA,EAAKO,kBACLC,KAVO,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAUzCR,EAAKS,WAIjB,IAAA,IAAIC,IADL,OAAOrL,KAAK0K,KAASA,EAASA,EAAO1E,QAAQsD,OAAOpD,GAAI,GAAIyE,OAAAA,EAAKW,eAAiBC,OAAO,EAAIjC,OAAOpD,GAAG1C,UAC7FoH,EACR,IAAItB,OAAW+B,IAAAA,OAAAA,EAAMrL,MAAAA,KAAK0K,KAC5BA,EAASA,EAAO1E,QAAQsD,OAAOpD,GAA0B,IAArBoD,OAAOpD,GAAG1C,OAAiBoH,EAAES,GAAO,OAC9ET,OAAAA,EAAES,IAAME,OAAO,GAAIX,OAAAA,EAAES,IAAM7H,UAGlBkH,OAAAA,EAEHC,IAAAA,EAAO,IAAIvI,KAAKR,GAOb4J,OANKb,EAAKW,cAMF,KALHX,EAAKE,WAAa,EAAK,EAAKF,EAAKE,WAAa,EAAK,KAAOF,EAAKE,WAAa,IAK1D,IAJpBF,EAAKG,UAI6B,IAHlCH,EAAKI,WAG2C,IAF9CJ,EAAKK,aAEyD,IAD9DL,EAAKM,cAWd,QAAA,WAAA,EAAA,IAAMQ,EAAY,SAACC,GASjB5B,OAPH4B,EAAI,KACAhH,KAAKwD,MAAMwD,EAAI,MAAQ,IAAMhH,KAAKwD,MAAMwD,EAAI,KAAO,IAAM,IAAMA,EAAI,GAAK,IACrEA,EAAI,GACPhH,KAAKwD,MAAMwD,EAAI,IAAM,IAAMA,EAAI,GAAK,IAEpCA,EAAI,GAAK,KAPZ,QAAA,UAAA;;AChDF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAMC,EAAW,SAACC,GACd,MAAA,aAAaC,MAAM,EAAID,EAAM,GAAKA,IADtC,QAAA,QAAA;;ACYA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,IAAME,EAAe,CAC3B9D,MAAM,GACN+D,MAAQ,SAAUC,EAAMC,GACnB,IAAA,IAAIjJ,EAAI,EAAGA,EAAIiJ,EAAKzI,OAAQR,IAAI,CAC/B,IAACiJ,EAAKjJ,GAAGkJ,UAAkB,OAAA,EAC3B,IAACD,EAAKjJ,GAAGrD,KAAc,OAAA,EACvB,IAACsM,EAAKjJ,GAAGmJ,SAAkB,OAAA,EAC3B,IAACH,EAAKC,EAAKjJ,GAAGrD,MAA8C,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EACxDF,OAAAA,EAAKjJ,GAAGkJ,WACV,IAAA,SAED,IADO,IAAI5C,OAAO,MAAQ2C,EAAKjJ,GAAGoJ,UAAY,MACzCpM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAA+C,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAC1E,MACK,IAAA,MAED,IADO,IAAI7C,OAAO,wBAA0B2C,EAAKjJ,GAAGoJ,UAAY,MAC3DpM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAA+C,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EACzE,MAEI,IAAA,UACA,IAAC,KAAKlL,SAAS+K,EAAKC,EAAKjJ,GAAGrD,OAExB,OADFqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UACd,EAKJH,IAHAK,EAASJ,EAAKjJ,GAAGoJ,UAAUpF,MAAM,MAC9B,GAAKuB,OAAO8D,EAAO,IAC1BA,EAAO,GAAK9D,OAAO8D,EAAO,IACtBL,EAAKC,EAAKjJ,GAAGrD,MAAQ0M,EAAO,IAAML,EAAKC,EAAKjJ,GAAGrD,MAAQ0M,EAAO,GAE1D,OADFrE,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UACd,EAET,MACK,IAAA,WAEA,IADM,kBACDnM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAAgD,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAIvEH,IAHAK,EAASJ,EAAKjJ,GAAGoJ,UAAUpF,MAAM,MAC9B,GAAKuB,OAAO8D,EAAO,IAC1BA,EAAO,GAAK9D,OAAO8D,EAAO,IACtBL,EAAKC,EAAKjJ,GAAGrD,MAAQ0M,EAAO,IAAML,EAAKC,EAAKjJ,GAAGrD,MAAQ0M,EAAO,GAE1D,OADFrE,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UACd,EAET,MACK,IAAA,WACA9C,IAEAgD,EADA,IADM,0BACDrM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAA8C,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAIrEH,IAHAK,EAASJ,EAAKjJ,GAAGoJ,UAAUpF,MAAM,MAC9B,GAAKuB,OAAO8D,EAAO,IAC1BA,EAAO,GAAK9D,OAAO8D,EAAO,IACtBL,EAAKC,EAAKjJ,GAAGrD,MAAQ0M,EAAO,IAAML,EAAKC,EAAKjJ,GAAGrD,MAAQ0M,EAAO,GAE1D,OADFrE,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UACd,EAET,MACK,IAAA,OACAH,GAAAA,EAAKC,EAAKjJ,GAAGrD,OAASsM,EAAKjJ,GAAGoJ,UAAmD,OAAjCpE,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EACtF,MACK,IAAA,UACAH,GAAAA,EAAKC,EAAKjJ,GAAGrD,OAASsM,EAAKjJ,GAAGoJ,UAAmD,OAAjCpE,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EACtF,MACK,IAAA,QAEA,IADM,iDACDnM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAAgD,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAC5E,MACK,IAAA,UAEA,IADM,kBACDnM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAAgD,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAC5E,MACK,IAAA,UAEA,IADM,aACDnM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAAgD,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAC5E,MACK,IAAA,MAEA,IADM,IAAI7C,OAAO2C,EAAKjJ,GAAGoJ,WACpBpM,KAAKgM,EAAKC,EAAKjJ,GAAGrD,OAAgD,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAC5E,MACK,IAAA,KACD,IAACF,EAAKjJ,GAAGoJ,UAAUE,KAAK,SAAAvK,GAAKA,OAAAA,IAAMiK,EAAKC,EAAKjJ,GAAGrD,QACZ,OAAjCqI,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,EAExC,MACK,IAAA,UACDH,GAAsB,MAAtBA,EAAKC,EAAKjJ,GAAGrD,OAAiBqM,EAAKC,EAAKjJ,GAAGrD,MAAM6D,OAAS,EAAyC,OAAjCwE,KAAAA,MAAQiE,EAAKjJ,GAAGmJ,UAAiB,GAIlG,OAAA,GAERlL,SAAW,SAAUsL,GAEblD,MADG,0BACCrJ,KAAKuM,KAzFX,QAAA,aAAA;;ACsGN,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,YAAA,EAvHD,IAAIC,EAAW,SAACC,GAOLC,OAFPD,EAASA,EAAOzG,QAAQ,IAAK,KAC7B+B,QAAQ4E,IAAcF,UAAAA,OAAAA,EAAOjJ,SACtBkJ,EAAOD,IAIZG,EAAU,oEAOHC,EAAS,WAACC,IAEfC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAFrBP,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACrBQ,EAAS,GAETtK,EAAI,EAEDA,IADP8J,EAAQS,EAAaT,GACd9J,EAAI8J,EAAMtJ,QAIb0J,GAHAH,EAAOD,EAAMU,WAAWxK,OAGT,EACfmK,GAAgB,EAAPJ,IAAa,GAHtBC,EAAOF,EAAMU,WAAWxK,OAGY,EACpCoK,GAAgB,GAAPJ,IAAc,GAHvBC,EAAOH,EAAMU,WAAWxK,OAGa,EACrCqK,EAAc,GAAPJ,EACHQ,MAAMT,GACNI,EAAOC,EAAO,GACPI,MAAMR,KACbI,EAAO,IAEXC,EAASA,EACLV,EAAQc,OAAOR,GAAQN,EAAQc,OAAOP,GACtCP,EAAQc,OAAON,GAAQR,EAAQc,OAAOL,GAEvCC,OAAAA,GA+EV,QAAA,OAAA,EAxEM,IAAMZ,EAAS,WAACI,IAEfC,EAAMC,EAAMC,EACNE,EAAMC,EAAMC,EAHHP,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACrBQ,EAAS,GAGTtK,EAAI,EAEDA,IADP8J,EAAQA,EAAM9G,QAAQ,sBAAuB,IACtChD,EAAI8J,EAAMtJ,QAKbuJ,EAJOH,EAAQtI,QAAQwI,EAAMY,OAAO1K,OAIpB,GAHhBmK,EAAOP,EAAQtI,QAAQwI,EAAMY,OAAO1K,QAGN,EAC9BgK,GAAgB,GAAPG,IAAc,GAHvBC,EAAOR,EAAQtI,QAAQwI,EAAMY,OAAO1K,QAGC,EACrCiK,GAAgB,EAAPG,IAAa,GAHtBC,EAAOT,EAAQtI,QAAQwI,EAAMY,OAAO1K,OAIpCsK,GAAkBK,OAAOC,aAAab,GACzB,KAATK,IACAE,GAAkBK,OAAOC,aAAaZ,IAE7B,KAATK,IACAC,GAAkBK,OAAOC,aAAaX,IAIvCK,OADPA,EAASO,EAAaP,IAK1B,SAASC,EAAaO,GAClBA,EAASA,EAAO9H,QAAQ,QAAQ,MAE3B,IADD+H,IAAAA,EAAU,GACL1F,EAAI,EAAGA,EAAIyF,EAAOtK,OAAQ6E,IAAK,CAChCkC,IAAAA,EAAIuD,EAAON,WAAWnF,GACtBkC,EAAI,IACJwD,GAAWJ,OAAOC,aAAarD,GACxBA,EAAI,KAASA,EAAI,MACxBwD,GAAWJ,OAAOC,aAAcrD,GAAK,EAAK,KAC1CwD,GAAWJ,OAAOC,aAAkB,GAAJrD,EAAU,OAE1CwD,GAAWJ,OAAOC,aAAcrD,GAAK,GAAM,KAC3CwD,GAAWJ,OAAOC,aAAerD,GAAK,EAAK,GAAM,KACjDwD,GAAWJ,OAAOC,aAAkB,GAAJrD,EAAU,MAI3CwD,OAAAA,EAIX,SAASF,EAAaE,GAOV/K,IANJ8K,IAAAA,EAAS,GACT9K,EAAI,EACJuH,EAAI,EAEJyD,EAAK,EACLC,EAAK,EACDjL,EAAI+K,EAAQvK,SAChB+G,EAAIwD,EAAQP,WAAWxK,IACf,KACJ8K,GAAUH,OAAOC,aAAarD,GAC9BvH,KACOuH,EAAI,KAASA,EAAI,KACxByD,EAAKD,EAAQP,WAAWxK,EAAE,GAC1B8K,GAAUH,OAAOC,cAAmB,GAAJrD,IAAW,EAAW,GAALyD,GACjDhL,GAAK,IAELgL,EAAKD,EAAQP,WAAWxK,EAAE,GAC1BiL,EAAKF,EAAQP,WAAWxK,EAAE,GAC1B8K,GAAUH,OAAOC,cAAmB,GAAJrD,IAAW,IAAa,GAALyD,IAAY,EAAW,GAALC,GACrEjL,GAAK,GAGN8K,OAAAA,EACV,QAAA,OAAA;;AClHM,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,IAAMI,EAAY,WAAW,UAAA,OAAA,QAAA,IAAA,UAAA,IAAA,UAAA,GAIhCnG,QAAQ4E,IAAI,SAJT,QAAA,UAAA;;ACLPgB,OAAO/M,UAAUuN,UAAY,SAAS9E,GAI9B,IAHH9G,IAAAA,EAAM,GAENmJ,EAAI,GACsB,OAAtBA,EAAIrC,EAAIhC,KAFN,QAGT9E,EAAImB,KAAKgI,EAAE,IAELnJ,OAAAA;;;AC6BP,IAAA,EAAA,UAAA,GAnCD,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,iBACA,EAAA,EAAA,QAAA,qBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,iBAuBC,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,OAAA,KAAA,GAAA,mBAAA,OAAA,wBAAA,EAAA,EAAA,OAAA,OAAA,sBAAA,GAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,eAAA,EAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAtBD,QAAA,oBAEA,IAAM6L,EACCxM,EAAAA,GAAAA,EACAW,EACAoI,EACAzF,EACA4E,EACAnB,EACA0F,EACAhO,EACAiO,EACAC,EACA9B,EACA+B,EAZQ,CAaX5O,QAAQ6O,EAAY7O,QAAAA,UAKxB,IAAI,IAAIuC,KAFRuM,EAAON,UAAYA,EAEJA,EACd1O,QAAQyC,GAAOiM,EAAUjM","file":"index.js","sourceRoot":"..","sourcesContent":["module.exports={name:\"utilscore\",version:\"0.0.31\",description:\"javascript 工具函数包\",main:\"index.js\",scripts:{test:'echo \"Error: no test specified\" && exit 1',start:\"parcel index.js\",build:\"parcel build index.js\"},repository:{type:\"git\",url:\"https://github.com/cgxqd/utilscore\"},keywords:[\"utilscore\",\"core\",\"common\",\"commonJS\",\"common-js\",\"util\",\"utils\",\"lib\",\"libs\",\"javascript\"],author:\"cgx\",license:\"ISC\"};","\r\n/**\r\n * 判断类型Null\r\n * @param {any} value \r\n */\r\nexport const isNull = value => Object.prototype.toString.call(value) == \"[object Null]\"\r\n\r\n/**\r\n * 判断类型Undefined \r\n * @param {any} value \r\n */\r\nexport const isUndefined = value => Object.prototype.toString.call(value) == \"[object Undefined]\"\r\n\r\n/**\r\n * 判断类型Boolean\r\n * @param {any} value \r\n */\r\nexport const isBoolean = value => Object.prototype.toString.call(value) == \"[object Boolean]\"\r\n\r\n/**\r\n * 判断类型Number\r\n * @param {any} value \r\n */\r\nexport const isNumber = value => Object.prototype.toString.call(value) == \"[object Number]\"\r\n\r\n/**\r\n * 判断类型String\r\n * @param {any} value \r\n */\r\nexport const isString = value => Object.prototype.toString.call(value) == \"[object String]\"\r\n\r\n/**\r\n * 判断类型Symbol\r\n * @param {any} value \r\n */\r\nexport const isSymbol = value => Object.prototype.toString.call(value) == \"[object Symbol]\"\r\n\r\n/**\r\n * 判断类型Object\r\n * @param {any} value \r\n */\r\nexport const isObject = value => Object.prototype.toString.call(value) == \"[object Object]\"\r\n\r\n/**\r\n * 判断类型RegExp\r\n * @param {any} value \r\n */\r\nexport const isRegExp = value=> Object.prototype.toString.call(value) == \"[object RegExp]\"\r\n\r\n/**\r\n * 判断类型Array\r\n * @param {any} value \r\n */\r\nexport const isArray = value => Object.prototype.toString.call(value) == \"[object Array]\"\r\n\r\n/**\r\n * 判断类型Function\r\n * @param {any} value \r\n */\r\nexport const isFunction = value => Object.prototype.toString.call(value) == \"[object Function]\"\r\n\r\nexport const getType = (value) => Object.prototype.toString.call(value).match(/\\s([a-z]+)/i)[1].toLocaleLowerCase()","import {isObject} from './types'\r\n\r\n/**\r\n * 深度克隆\r\n * @param {*} obj \r\n */\r\nexport const deepClone = (obj) => {\r\n    if(null === obj){\r\n        return obj;\r\n    }\r\n    if(obj instanceof Array){\r\n        return obj.map(row => deepClone(row));\r\n    }\r\n    if(obj instanceof Object){\r\n        let ret = {};\r\n        Object.keys(obj).forEach(key =>{\r\n            if(obj[key] instanceof Date){\r\n                ret[key] = new Date(obj[key].getTime());\r\n            } else {\r\n                ret[key] = deepClone(obj[key]);\r\n            }\r\n        });\r\n        return ret;\r\n    }\r\n    return obj;\r\n};\r\n\r\n\r\n/**\r\n * 返回按属性(props)和顺序(orders)排序的对象数组。\r\n * @param {array} arr \r\n * @param {array} props \r\n * @param {array} orders 'desc升序' 、 'asc降序'\r\n * @example const users = [\r\n                { name: 'aaa', age: 48 },\r\n                { name: 'awegawe', age: 36 },\r\n                { name: 'aweaw', age: 40 }\r\n            ]; \r\n            utilscore.orderBy(users, ['age'],['asc']) // => [{\"name\":\"awegawe\",\"age\":36},{\"name\":\"aweaw\",\"age\":40},{\"name\":\"aaa\",\"age\":48}]\r\n */\r\nexport const orderBy = (arr, props, orders) => {\r\n    return [...arr].sort((a, b) =>\r\n    props.reduce((acc, prop, i) => {\r\n      if (acc === 0) {\r\n        const [p1, p2] = orders && orders[i] === 'desc' ? [b[prop], a[prop]] : [a[prop], b[prop]];\r\n        acc = p1 > p2 ? 1 : p1 < p2 ? -1 : 0;\r\n      }\r\n      return acc;\r\n    }, 0)\r\n  );\r\n}\r\n\r\n\r\n\r\n/**\r\n * 根据 key 递归查找链带关系\r\n * @param {sting} leafIdName  \r\n * @param {any} leafId  \r\n * @param {array} nodes 被查找的数组\r\n * @param {array} path 非必填 \r\n * @param {array} path 非必填 \r\n * @example let arr = [\r\n                    {\r\n                        name:'awefawef',\r\n                        id:111,\r\n                        children:[\r\n                            {\r\n                                name:'2222222aaa',\r\n                                id:222,\r\n                                children:[\r\n                                    {\r\n                                        name:'cccccaaa',\r\n                                        id:333,\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                }\r\n            ]\r\n            utilscore.findPathByLeafId('id',333,arr) // => [{\"id\":111,\"value\":\"awefawef\"},{\"id\":222,\"value\":\"2222222aaa\"}]\r\n */\r\nexport const findPathByLeafId = (leafIdName,leafId, nodes, path = []) => {\r\n    for(var i = 0; i < nodes.length; i++) {\r\n        var tmpPath = [...path];\r\n        if(leafId == nodes[i][leafIdName]) {\r\n            return tmpPath;\r\n        }\r\n\r\n        tmpPath.push({\r\n            [leafIdName]:nodes[i][leafIdName],\r\n            value:nodes[i].name\r\n        });\r\n        if(nodes[i].children) {\r\n            let findResult = findPathByLeafId(leafIdName,leafId, nodes[i].children, tmpPath);\r\n            if(findResult) {\r\n                return findResult;\r\n            }\r\n        }\r\n    }\r\n}\r\n  \r\n\r\n/**\r\n * 对象合并\r\n * @param {object} a 对象 \r\n * @param {object} b 对象\r\n * @example var a = {\r\n                a:11,\r\n                o:{\r\n                    b:22\r\n            }\r\n            var b = {\r\n                c:33,\r\n                o:{\r\n                    d:44\r\n                }\r\n            }\r\n            utilscore.merge(a,b)\r\n            // => \r\n            {\"a\":11,\"o\":{\"b\":22,\"d\":44},\"c\":33}\r\n}\r\n */\r\nexport const merge = (a,b) => {\r\n    for (var key in b) {\r\n        if (!a.hasOwnProperty(key)) {\r\n            a[key] = b[key];\r\n        } else if (isObject(b[key],) && isObject(a[key])) {\r\n            merge(a[key], b[key]);\r\n        }\r\n    }\r\n    return a;\r\n}","/**\r\n * 根据属性去重数组\r\n * @param {array} arr 去重的数组\r\n * @param {string} key 去重的key\r\n * @example utilscore.uniqueBy([{name:'1111'},{name:'1111'},{name:'222'},{name:'333'}],'name') => [{name:'1111'},{name:'222'},{name:'333'}\r\n */\r\nexport const uniqueBy = function(arr,key){\r\n    return arr.filter((element,index,array)=>array.findIndex(row=>row[key]===element[key]) === index)\r\n}\r\n\r\n\r\n/**\r\n * 普通数组去重\r\n * @param {array} arr 去重的数组\r\n * @example utilscore.unique([1,2,2,3,4,3,4,7]) => [1, 2, 3, 4, 7]\r\n */\r\nexport const unique = (arr) =>\r\n    arr.filter((element,index,array)=>array.indexOf(element) === index)\r\n\r\n\r\n/**\r\n * 找出数组中该属性最大值的一列\r\n * @param {array} arr \r\n * @param {string} key  \r\n */    \r\nexport const maxNumBy = (arr,key) => \r\n    arr.find(item => item[key]===Math.max.apply(Math,arr.map(row=>row[key])))\r\n\r\n\r\n/**\r\n * 找出数组中该属性最小值的一列\r\n * @param {array} arr \r\n * @param {string} key  \r\n */    \r\nexport const minNumBy = (arr,key) => \r\n    arr.find(item => item[key]===Math.min.apply(Math,arr.map(row=>row[key])))   \r\n\r\n\r\n/**\r\n * 数组中的最大值\r\n * @param {array} arr \r\n */    \r\nexport const maxNum = (arr) => \r\n    Math.max.apply(Math,arr)\r\n\r\n\r\n/**\r\n * 数组中的最小值\r\n * @param {array} arr \r\n */    \r\nexport const minNum = (arr) => \r\n    Math.min.apply(Math,arr)\r\n","/**\r\n * 函数防抖 (立即执行版)\r\n * @param {function} fn 函数\r\n * @param {number} delay 延迟执行毫秒数\r\n */\r\nexport const  debounceStart = function (fn,delay=3000){\r\n\tlet timer = null;\r\n\tlet status = true;\r\n\tclearTimeout(timer);\r\n\tif(status){\r\n\t\tstatus = false;\r\n\t\tfn.call(this,arguments);\r\n\t}\r\n\ttimer = setTimeout(()=>status = true, delay);\r\n}\r\n\r\n\r\n/**\r\n * 函数防抖 (非立即执行版)\r\n * @param {function} fn 函数\r\n * @param {number} delay 延迟执行毫秒数\r\n */\r\nexport const debounceEnd = (fn,delay) => {\r\n\tlet timer = null;\r\n\treturn function() {\r\n\t\tlet args = arguments;\r\n\t\tif(timer) clearTimeout(timer)\r\n\t\ttimer = setTimeout(()=>{\r\n\t\t\tfn.apply(this,args)\r\n\t\t},delay)\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * 函数防抖 (完全版)\r\n * @param {function} fn 函数\r\n * @param {number} delay 延迟执行毫秒数\r\n * @param {boolean} immediate true 表立即执行，false 表非立即执行\r\n */\r\nexport const debounce = (fn,delay,immediate = false) => {\r\n\tlet timer = null;\r\n\tlet status = true;\r\n\tif(!immediate) return function() {\r\n\t\tlet args = arguments;\r\n\t\tif(timer) clearTimeout(timer)\r\n\t\ttimer = setTimeout(()=>fn.apply(this,args),delay)\r\n\t}\r\n\telse return function(){\r\n\t\tclearTimeout(timer);\r\n\t\tif(status){\r\n\t\t\tstatus = false;\r\n\t\t\tfn.call(this,arguments);\r\n\t\t}\r\n\t\ttimer = setTimeout(()=>status = true, delay);\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * 函数节流\r\n * @param {function} fn 函数\r\n * @param {number} delay 延迟执行毫秒数\r\n */\r\nexport const throttle = (fn,delay) => {\r\n\tlet timer = null;\r\n    return function() {\r\n        let args = arguments;\r\n        if (!timer) {\r\n            timer = setTimeout(() => {\r\n                timer = null;\r\n                fn.apply(this, args)\r\n            }, delay)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import { isObject, isString } from './types'\r\n/**\r\n * 根据对象中的参数匹配插入到url中\r\n * @param {*} url \r\n * @param {Object} options \r\n * @example utilscore.insertUrl('http://www.baidu.com?:name',{name:'ceshi'}) // => http://www.baidu.com?ceshi\r\n */\r\nexport const insertUrl = (url, options = {}) => {\r\n    return url.replace(/:([a-zA-Z0-9_]{1,})/g, ($0, $1) => {\r\n        let val = encodeURIComponent(options[$1]);\r\n        if (val === undefined) {\r\n            new Error(`URL ${url} not find ${$1}`);\r\n        }\r\n        return val;\r\n    })\r\n}\r\n\r\n\r\n/**\r\n * url 序列化和反序列化\r\n * @param {Object|String} param \r\n * @example utilscore.URLSearchParams('https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=1&rsv_idx=1&tn=baidu&wd=parseQueryString&rsv_pq=8c7a6d0000146171&rsv_t=43d6RzTiyjUjUKtQtqfR3XL25JepKFwJYvvSpsj%2BJ7aFqxdBLDungY%2Bfx%2BE&rqlang=cn&rsv_enter=1&rsv_n=2&rsv_sug3=1') \r\n            // => \r\n            {\r\n                \"ie\":\"utf-8\",\r\n                \"f\":\"8\",\r\n                \"rsv_bp\":\"1\",\r\n                \"rsv_idx\":\"1\",\r\n                \"tn\":\"baidu\",\r\n                \"wd\":\"parseQueryString\",\r\n                \"rsv_pq\":\"8c7a6d0000146171\",\r\n                \"rsv_t\":\"43d6RzTiyjUjUKtQtqfR3XL25JepKFwJYvvSpsj+J7aFqxdBLDungY+fx+E\",\r\n                \"rqlang\":\"cn\",\r\n                \"rsv_enter\":\"1\",\r\n                \"rsv_n\":\"2\",\r\n                \"rsv_sug3\":\"1\"\r\n            }\r\n            utilscore.URLSearchParams({\r\n                name:'cgx',\r\n                test:'ceshi'\r\n            })\r\n            // => \"name=cgx&test=ceshi\"\r\n */\r\n\r\nexport const URLSearchParams = (param) => {\r\n    if (isObject(param)) {\r\n        return Object.keys(param).map(key => `${key}=${encodeURIComponent(JSON.stringify(param[key]))}`).join('&')\r\n    } else if (isString(param)) {\r\n        let maps = {};\r\n        let _params = param.match(/(([\\w\\%\\/\\#\\~\\!\\*\\(\\)\\_\\-\\.\\'\\$]+)\\=([\\w\\%\\/\\#\\~\\!\\*\\(\\)\\_\\-\\.\\'\\$]+)?)/ig)\r\n        _params && _params.forEach(res => {\r\n            let row = decodeURIComponent(res).split('=');\r\n            try {\r\n                maps[row[0]] = JSON.parse(decodeURIComponent(row[1]))\r\n            } catch (err) {\r\n                try{\r\n                    maps[row[0]] = decodeURIComponent(row[1])\r\n                }\r\n                //特殊字符情况\r\n                catch(err){ \r\n                    maps[row[0]] = row[1]\r\n                }\r\n            }\r\n        })\r\n        return maps\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 返回网址的相关信息，模拟了 浏览器的 new URL(urlString) 部分功能\r\n * @param {string} urlString url网址\r\n * @returns {object}  \r\n * @example utilscore.Url('https://localhost:3000/translate?aldtype=16047&query=&keyfrom=baidu&smartresult=dict&lang=auto2zh#zh/en/%E7%AB%AF%E5%8F%A3')\r\n                // => \r\n                // {\r\n                //     hash: \"#zh/en/%E7%AB%AF%E5%8F%A3\",\r\n                //     host: \"localhost:3000\",\r\n                //     hostname: \"localhost\",\r\n                //     href: \"https://localhost:3000/translate?aldtype=16047&query=&keyfrom=baidu&smartresult=dict&lang=auto2zh#zh/en/%E7%AB%AF%E5%8F%A3\",\r\n                //     origin: \"https://localhost:3000\",\r\n                //     pathname: \"/translate\",\r\n                //     port: \"3000\",\r\n                //     protocol: \"https:\",\r\n                //     search: \"?aldtype=16047&query=&keyfrom=baidu&smartresult=dict&lang=auto2zh\"\r\n                // }\r\n */\r\nexport const Url = (urlString) => {\r\n    try {\r\n        let [href, origin ,protocol,host,hostname,portName,port,pathname,searchName,search,hash ] = /((http:|https:)\\/\\/(([\\w.\\-]+)(\\:(\\d+))?))([\\w\\/\\-]+)?((\\?[^#]+)(.+)?)?/ig.exec(urlString)\r\n        return {hash,host,hostname,href,origin,pathname,port,protocol,search}\r\n    } catch (err) {\r\n        console.error(`Raises a SYNTAX ERROR exception as 'about:blank/${urlString}' is not valid`)\r\n    }\r\n}","/**\r\n * 返回指定范围内的随机整数。\r\n * @param {number} min 最小值\r\n * @param {number} max 最大值\r\n */\r\nexport const randomNum = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n/**\r\n * 将数字四舍五入到指定的小数位数。\r\n * @param {number} n 操作的数字\r\n * @param {number} decimals 精确到几位小数 \r\n */\r\nexport const round = (n, decimals = 0) => {\r\n    return Number(`${Math.round(`${n}e${decimals}`)}e-${decimals}`)\r\n}\r\n\r\n\r\n/**\r\n * 返回两个或两个以上数字/数字数组中元素之和。\r\n * @param  {...any} arr 操作的数组 \r\n */\r\nexport const sum = (...arr) => [...arr].reduce((acc, val) => acc + val, 0);\r\n\r\n\r\n/**\r\n * 根据函数映射每个元素，然后返回数组的和\r\n * @param {*} arr \r\n * @param {*} fn \r\n */\r\nexport const sumBy = (arr, fn) =>\r\n  arr.map(typeof fn === 'function' ? fn : val => val[fn]).reduce((acc, val) => acc + val, 0);\r\n\r\n/**\r\n * 将数字转化为千分位格式,可以在数字前面加上符号\r\n * @param {number|string} num \r\n * @param {string} mark\r\n * @returns {string}\r\n */\r\nexport const toDecimalMark = (num,mark='') => {\r\n  let _num = num.toLocaleString('en-US');\r\n  if(mark) return _num.padStart(_num.length+1,mark)\r\n  return _num;\r\n}","import { unique } from './array'\r\nimport { isArray, isString } from './types' \r\n\r\n/**\r\n * 根据位置,使用 * 遮蔽字符串\r\n * @param {string} cc \r\n * @param {number} num1 \r\n * @param {number} num2 \r\n * @param {string} _mask \r\n * @example utilscore.mask('12398765432',3,7) // => \"123****5432\"\r\n */ \r\nexport const mask = (cc, num1 = 0, num2 = 0, _mask = '*') => {\r\n  let reg = new RegExp(`\\^\\(\\.\\{${num1}\\}\\)\\(\\.\\{${num2 - num1}\\}\\)\\(\\.${num2>=cc.length?'\\?':'\\+'}\\)\\$`);\r\n  return cc.replace(reg,($0,$1,$2,$3)=> $1+$2.replace(/./g,_mask)+$3) \r\n}\r\n\r\n/**\r\n * 从位置左边开始，使用 * 遮蔽字符串\r\n * @param {string} cc \r\n * @param {number} num \r\n * @param {string} _mask \r\n */\r\nexport const maskLeft = (cc, num = 0, _mask = '*') => mask(cc,0,num,_mask)\r\n  \r\n/**\r\n * 从位置右边开始，使用 * 遮蔽字符串\r\n * @param {string} cc \r\n * @param {number} num \r\n * @param {string} _mask \r\n */\r\nexport const maskRight = (cc, num = 0, _mask = '*') => {\r\n  let strL = cc.length\r\n  return mask(cc,num>strL?0:strL-num,strL,_mask)\r\n}\r\n\r\n\r\n/**\r\n * 生成一个随机的十六进制颜色代码\r\n */\r\nexport const randomHexColorCode = () => {\r\n    let n = ((Math.random() * 0xfffff) | 0).toString(16);\r\n    return '#' + (n.length !== 6 ? ((Math.random() * 0xf) | 0).toString(16) + n : n)\r\n  }\r\n\r\n\r\n/**\r\n * 返回元素出现的次数\r\n * @param {string} str \r\n * @param {null|string,array} keys \r\n * @example 1.不传参,获取全部\r\n              utilscore.getCounts('asawdawf') // => {a: 3, s: 1, w: 2, d: 1, f: 1}\r\n            2.传字符串  \r\n              utilscore.getCounts('asasfdfasdasf','asf') // => {asf: 2}\r\n            3.传数组\r\n              utilscore.getCounts('asdfjl;qwoetuqwe*(^&&()_)*_23480*yoij)(ojilA4WE4',['we*(^&&()_)*','asdfjl','_23480','qw'])\r\n              // => {we*(^&&()_)*: 1, asdfjl: 1, _23480: 1, qw: 2}\r\n */\r\nexport const getCounts = (str,keys=null) => {\r\n  let arr = {}\r\n  let keyMap = []\r\n  let arrStr = str.split('')\r\n  \r\n  if(isArray(keys)) keyMap = unique(keys);\r\n  else if(isString(keys)) keyMap = keys.split(' ')\r\n  else keyMap = unique(arrStr)\r\n\r\n  keyMap.map(key=>{\r\n    \r\n    //处理包含特殊字符\r\n    var reg = new RegExp(\"\\([`~!@#$^&*()=|{}':;',\\\\[\\\\].<>/?~！@#￥……&*（）——|{}【】‘；：”“'。，、？]\\)\",'g')\r\n    let _key = key.replace(reg,'\\\\$1')\r\n\r\n    let res = str.match(new RegExp(_key,'g'))\r\n    \r\n    arr[key] = res?(arr[key] = res.length):0\r\n  })\r\n\r\n\r\n\treturn arr\r\n} \r\n\r\n/**\r\n * 全局唯一标识符 UUID\r\n * @param {number} len 长度\r\n * @param {number} radix 基数 62\r\n */\r\nexport const uuid = (len, radix) => {\r\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\r\n  var uuid = [], i;\r\n  radix = radix || chars.length;\r\n\r\n  if (len) {\r\n    // Compact form\r\n    for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random()*radix];\r\n  } else {\r\n    // rfc4122, version 4 form\r\n    var r;\r\n\r\n    // rfc4122 requires these characters\r\n    uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\r\n    uuid[14] = '4';\r\n\r\n    // Fill in random data.  At i==19 set the high bits of clock sequence as\r\n    // per rfc4122, sec. 4.1.5\r\n    for (i = 0; i < 36; i++) {\r\n      if (!uuid[i]) {\r\n        r = 0 | Math.random()*16;\r\n        uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\r\n      }\r\n    }\r\n  }\r\n\r\n  return uuid.join('');\r\n}\r\n\r\n/**\r\n * GUID:128位的数字标识符\r\n */\r\nexport const guid = () => {\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n      var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n      return v.toString(16);\r\n  });\r\n}","/**\r\n * 格式化时间\r\n * @param {*} obj \r\n * @param {*} format \r\n * @example utilscore.formatTime(new Date(),'yyyy-M-d h:m:s D') // => 2019-05-10 17:37:24 星期六\r\n */\r\nexport const formatTime = (obj, format) => {\r\n    if (format) {\r\n      var date;\r\n      if (obj instanceof Date) {\r\n        date = obj;\r\n      } else {\r\n        date = new Date(obj);\r\n      }\r\n      var dayNames = ['星期一', '星期二', '星期三', '星期四', '星期五', '星期六', '星期日',]\r\n\r\n      var o = {\r\n        'M+': date.getMonth() < 9 ? \"0\" + (date.getMonth() + 1) : (date.getMonth() + 1), // 月份\r\n        'd+': date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate(), // 日\r\n        'h+': date.getHours(), // 小时\r\n        'm+': date.getMinutes(), // 分\r\n        's+': date.getSeconds() < 10 ? \"0\" + date.getSeconds() : date.getSeconds(), // 秒\r\n        'q+': Math.floor((date.getMonth() + 3) / 3), // 季度\r\n        'S+': date.getMilliseconds(), // 毫秒\r\n        'D+': dayNames[date.getDay()], //星期\r\n      };\r\n\r\n      if (/(y+)/.test(format)) format = format.replace(RegExp.$1, (`${date.getFullYear()}`).substr(4 - RegExp.$1.length));\r\n      for (var k in o) {\r\n        if (new RegExp(`(${k})`).test(format)) {\r\n          format = format.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((`\r\n00${o[k]}`).substr((`${o[k]}`).length)));\r\n        }\r\n      }\r\n      return format;\r\n    } else {\r\n      let date = new Date(obj)\r\n      let _year = date.getFullYear(),\r\n        _month = (date.getMonth() + 1) > 9 ? (date.getMonth() + 1) : '0' + (date.getMonth() + 1),\r\n        _date = date.getDate(),\r\n        _hour = date.getHours(),\r\n        _minute = date.getMinutes(),\r\n        _second = date.getSeconds()\r\n      return _year + '-' + _month + '-' + _date + ' ' + _hour + ':' + _minute + ':' + _second\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * @param  {s} 秒数\r\n   * @return {String} 字符串\r\n   * @example utilscore.formatHMS(3610) // -> 1h0m10s\r\n   */\r\n  export const formatHMS = (s) => {\r\n    var str = ''\r\n    if (s > 3600) {\r\n      str = Math.floor(s / 3600) + 'h' + Math.floor(s % 3600 / 60) + 'm' + s % 60 + 's'\r\n    } else if (s > 60) {\r\n      str = Math.floor(s / 60) + 'm' + s % 60 + 's'\r\n    } else {\r\n      str = s % 60 + 's'\r\n    }\r\n    return str\r\n  }","/**\r\n * 评分组件\r\n * @param {Number} rate max 5\r\n * @example utilscore.getRate(2)   //★★☆☆☆\r\n */\r\nexport const getRate =  (rate) => {\r\n    return '★★★★★☆☆☆☆☆'.slice(5 - rate, 10 - rate);\r\n}","/**\r\n *  表单验证\r\n *  //定义表单规则\r\n    var rule = [\r\n        {name:\"nickname\", checkType : \"string\", checkRule:\"1,3\",  errorMsg:\"姓名应为1-3个字符\"},\r\n        {name:\"gender\", checkType : \"in\", checkRule:['男','女'],  errorMsg:\"请选择性别\"},\r\n        {name:\"loves\", checkType : \"notnull\", checkRule:\"\",  errorMsg:\"请选择爱好\"}\r\n    ];\r\n    var checkRes = graceChecker.check({\r\n        nickname:'斯蒂芬',\r\n        gender:'男',\r\n        loves:'打代码'\r\n    }, rule);\r\n    if(checkRes){\r\n        console.log('验证通过')\r\n    }\r\n */\r\nexport const graceChecker = {\r\n\terror:'',\r\n\tcheck : function (data, rule){\r\n\t\tfor(var i = 0; i < rule.length; i++){\r\n\t\t\tif (!rule[i].checkType){return true;}\r\n\t\t\tif (!rule[i].name) {return true;}\r\n\t\t\tif (!rule[i].errorMsg) {return true;}\r\n\t\t\tif (!data[rule[i].name]) {this.error = rule[i].errorMsg; return false;}\r\n\t\t\tswitch (rule[i].checkType){\r\n\t\t\t\tcase 'string':\r\n\t\t\t\t\tvar reg = new RegExp('^.{' + rule[i].checkRule + '}$');\r\n\t\t\t\t\tif(!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg; return false;}\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'int':\r\n\t\t\t\t\tvar reg = new RegExp('^(-[1-9]|[1-9])[0-9]{' + rule[i].checkRule + '}$');\r\n\t\t\t\t\tif(!reg.test(data[rule[i].name])) {this.error = rule[i].errorMsg; return false;}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'between':\r\n\t\t\t\t\tif (!this.isNumber(data[rule[i].name])){\r\n\t\t\t\t\t\tthis.error = rule[i].errorMsg;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar minMax = rule[i].checkRule.split(',');\r\n\t\t\t\t\tminMax[0] = Number(minMax[0]);\r\n\t\t\t\t\tminMax[1] = Number(minMax[1]);\r\n\t\t\t\t\tif (data[rule[i].name] > minMax[1] || data[rule[i].name] < minMax[0]) {\r\n\t\t\t\t\t\tthis.error = rule[i].errorMsg;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'betweenD':\r\n\t\t\t\t\tvar reg = /^-?[1-9][0-9]?$/;\r\n\t\t\t\t\tif (!reg.test(data[rule[i].name])) { this.error = rule[i].errorMsg; return false; }\r\n\t\t\t\t\tvar minMax = rule[i].checkRule.split(',');\r\n\t\t\t\t\tminMax[0] = Number(minMax[0]);\r\n\t\t\t\t\tminMax[1] = Number(minMax[1]);\r\n\t\t\t\t\tif (data[rule[i].name] > minMax[1] || data[rule[i].name] < minMax[0]) {\r\n\t\t\t\t\t\tthis.error = rule[i].errorMsg;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'betweenF': \r\n\t\t\t\t\tvar reg = /^-?[0-9][0-9]?.+[0-9]+$/;\r\n\t\t\t\t\tif (!reg.test(data[rule[i].name])){this.error = rule[i].errorMsg; return false;}\r\n\t\t\t\t\tvar minMax = rule[i].checkRule.split(',');\r\n\t\t\t\t\tminMax[0] = Number(minMax[0]);\r\n\t\t\t\t\tminMax[1] = Number(minMax[1]);\r\n\t\t\t\t\tif (data[rule[i].name] > minMax[1] || data[rule[i].name] < minMax[0]) {\r\n\t\t\t\t\t\tthis.error = rule[i].errorMsg;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'same':\r\n\t\t\t\t\tif (data[rule[i].name] != rule[i].checkRule) { this.error = rule[i].errorMsg; return false;}\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'notsame':\r\n\t\t\t\t\tif (data[rule[i].name] == rule[i].checkRule) { this.error = rule[i].errorMsg; return false; }\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'email':\r\n\t\t\t\t\tvar reg = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\r\n\t\t\t\t\tif (!reg.test(data[rule[i].name])) { this.error = rule[i].errorMsg; return false; }\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'phoneno':\r\n\t\t\t\t\tvar reg = /^1[0-9]{10,10}$/;\r\n\t\t\t\t\tif (!reg.test(data[rule[i].name])) { this.error = rule[i].errorMsg; return false; }\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'zipcode':\r\n\t\t\t\t\tvar reg = /^[0-9]{6}$/;\r\n\t\t\t\t\tif (!reg.test(data[rule[i].name])) { this.error = rule[i].errorMsg; return false; }\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'reg':\r\n\t\t\t\t\tvar reg = new RegExp(rule[i].checkRule);\r\n\t\t\t\t\tif (!reg.test(data[rule[i].name])) { this.error = rule[i].errorMsg; return false; }\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'in':\r\n\t\t\t\t\tif(!rule[i].checkRule.some(row=>row===data[rule[i].name])){\r\n\t\t\t\t\t\tthis.error = rule[i].errorMsg; return false;\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'notnull':\r\n\t\t\t\t\tif(data[rule[i].name] == null || data[rule[i].name].length < 1){this.error = rule[i].errorMsg; return false;}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\tisNumber : function (checkVal){\r\n\t\tvar reg = /^-?[1-9][0-9]?.?[0-9]*$/;\r\n\t\treturn reg.test(checkVal);\r\n\t}\r\n}","let toStream = (base64) => {\r\n    // let start = base64.indexOf(',');\r\n    // console.log(base64);\r\n    // console.log(start)\r\n    // base64 = base64.substr(start+1);\r\n    base64 = base64.replace(\" \", \"+\");\r\n    console.log(`base64:${base64.length}`);\r\n    return decode(base64);\r\n};\r\n\r\n// private property\r\nconst _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n\r\n\r\n/**\r\n * base64 加密 \r\n * @param {string} input \r\n */\r\nexport const encode = (input='') => {\r\n    let output = \"\";\r\n    let chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n    let i = 0;\r\n    input = _utf8_encode(input);\r\n    while (i < input.length) {\r\n        chr1 = input.charCodeAt(i++);\r\n        chr2 = input.charCodeAt(i++);\r\n        chr3 = input.charCodeAt(i++);\r\n        enc1 = chr1 >> 2;\r\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n        enc4 = chr3 & 63;\r\n        if (isNaN(chr2)) {\r\n            enc3 = enc4 = 64;\r\n        } else if (isNaN(chr3)) {\r\n            enc4 = 64;\r\n        }\r\n        output = output +\r\n            _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\r\n            _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\r\n    }\r\n    return output;\r\n};\r\n\r\n/**\r\n * base64 解密\r\n * @param {string} input \r\n */\r\nexport const decode = (input='') => {\r\n    let output = \"\";\r\n    let chr1, chr2, chr3;\r\n    let enc1, enc2, enc3, enc4;\r\n    let i = 0;\r\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\r\n    while (i < input.length) {\r\n        enc1 = _keyStr.indexOf(input.charAt(i++));\r\n        enc2 = _keyStr.indexOf(input.charAt(i++));\r\n        enc3 = _keyStr.indexOf(input.charAt(i++));\r\n        enc4 = _keyStr.indexOf(input.charAt(i++));\r\n        chr1 = (enc1 << 2) | (enc2 >> 4);\r\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\r\n        chr3 = ((enc3 & 3) << 6) | enc4;\r\n        output = output + String.fromCharCode(chr1);\r\n        if (enc3 !== 64) {\r\n            output = output + String.fromCharCode(chr2);\r\n        }\r\n        if (enc4 !== 64) {\r\n            output = output + String.fromCharCode(chr3);\r\n        }\r\n    }\r\n    output = _utf8_decode(output);\r\n    return output;\r\n};\r\n\r\n// private method for UTF-8 encoding\r\nfunction _utf8_encode(string) {\r\n    string = string.replace(/\\r\\n/g,\"\\n\");\r\n    let utftext = \"\";\r\n    for (let n = 0; n < string.length; n++) {\r\n        let c = string.charCodeAt(n);\r\n        if (c < 128) {\r\n            utftext += String.fromCharCode(c);\r\n        } else if((c > 127) && (c < 2048)) {\r\n            utftext += String.fromCharCode((c >> 6) | 192);\r\n            utftext += String.fromCharCode((c & 63) | 128);\r\n        } else {\r\n            utftext += String.fromCharCode((c >> 12) | 224);\r\n            utftext += String.fromCharCode(((c >> 6) & 63) | 128);\r\n            utftext += String.fromCharCode((c & 63) | 128);\r\n        }\r\n\r\n    }\r\n    return utftext;\r\n}\r\n\r\n// private method for UTF-8 decoding\r\nfunction _utf8_decode(utftext) {\r\n    let string = \"\";\r\n    let i = 0;\r\n    let c = 0;\r\n    let c1 = 0;\r\n    let c2 = 0;\r\n    let c3 = 0;\r\n    while ( i < utftext.length ) {\r\n        c = utftext.charCodeAt(i);\r\n        if (c < 128) {\r\n            string += String.fromCharCode(c);\r\n            i++;\r\n        } else if((c > 191) && (c < 224)) {\r\n            c2 = utftext.charCodeAt(i+1);\r\n            string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\r\n            i += 2;\r\n        } else {\r\n            c2 = utftext.charCodeAt(i+1);\r\n            c3 = utftext.charCodeAt(i+2);\r\n            string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n            i += 3;\r\n        }\r\n    }\r\n    return string;\r\n}","/**\r\n * 文件下载\r\n * @param {String} options.url 请求路径\r\n * @param {String} options.fileName 文件名\r\n */\r\nexport const downFiles = (options = {\r\n    url:'',\r\n    fileName:'',\r\n}) => {\r\n    console.log('文件下载')\r\n}","String.prototype.match_all = function(reg){\r\n\tvar arr = []\r\n\tvar str = this;\r\n\tvar s = '';\r\n\twhile ((s = reg.exec(str)) != null) {\r\n\t\tarr.push(s[1])\r\n\t} \r\n\treturn arr\r\n}\t\r\n","\r\nimport packageJSON from './package.json'\r\nimport * as obj from './libs/object' \r\nimport * as arr from './libs/array' \r\nimport * as fn from './libs/function' \r\nimport * as url from './libs/url' \r\nimport * as types from './libs/types' \r\nimport * as num from './libs/number' \r\nimport * as str from './libs/string' \r\nimport * as date from './libs/date'\r\nimport * as other from './libs/other'\r\nimport * as validator from './libs/validator'\r\nimport * as base64 from './libs/base64'\r\nimport * as files from './libs/files'\r\nimport './libs/prototype'\r\n\r\nconst utilscore = {\r\n    ...obj,\r\n    ...arr,\r\n    ...date,\r\n    ...fn,\r\n    ...str,\r\n    ...num,\r\n    ...types,\r\n    ...url,\r\n    ...other,\r\n    ...validator,\r\n    ...base64,\r\n    ...files,\r\n    version:packageJSON.version,\r\n}\r\n\r\nglobal.utilscore = utilscore\r\n\r\nfor(let key in utilscore){\r\n\texports[key] = utilscore[key]\r\n}\r\n\r\n\r\n"]}